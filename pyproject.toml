[project]
name = "pydantic-prompter"
version = "0.1.16"
description = "Pydantic Prompter is a lightweight utility designed to facilitate the construction of prompts using YAML and generate Pydantic objects as outputs."
authors = [
    { name = "Ofer Helman", email = "helmanofer@gmail.com" },
]

readme = "./README.md"

dependencies = [
    "jinja2>=3.1.2",
    "pyyaml>=6.0.1",
    "retry>=0.9.2",
    "pydantic<2.0.0",
]
requires-python = ">=3.9"
license = { text = "MIT" }

[project.optional-dependencies]
openai = [
    "openai>=0.27.10",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.dev-dependencies]
bedrock = [
    "botocore @ file:///${PROJECT_ROOT}/binaries/botocore-1.31.21-py3-none-any.whl",
    "boto3 @ file:///${PROJECT_ROOT}/binaries/boto3-1.28.21-py3-none-any.whl",
    "awscli @ file:///${PROJECT_ROOT}/binaries/awscli-1.29.21-py3-none-any.whl",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "python-dotenv==1.0.0",
]
lint = [
    "flake8>=6.1.0",
    "black>=23.7.0",
    "yamllint>=1.32.0",
]
docs = [
    "mkdocs>=1.5.2",
    "mkdocs-material>=9.2.5",
]

[tool.pytest.ini_options]
testpaths = [
    "tests/*",
]
log_level = "INFO"
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_cli = true
log_cli_level = "INFO"


[project.urls]
Source = "https://github.com/helmanofer/pydantic-prompter"
Docs = "https://helmanofer.github.io/pydantic-prompter/"
